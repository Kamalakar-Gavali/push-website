{"version":3,"file":"static/js/305.3d39df7e.chunk.js","mappings":"kXAmBMA,EAAU,CACd,CACEC,SAAU,gBACVC,QAAS,UACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,0RACN,SAAC,KAAI,UAAC,sLACC,GAGb,CACEH,SAAU,gCACVC,QAAS,UACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,sQACN,SAAC,KAAI,UAAC,wWACN,SAAC,KAAI,UAAC,2VACC,GAGb,CACEH,SAAU,6DACVC,QAAS,UACTC,aAAc,kBACZ,UAACC,EAAM,YACL,UAAC,KAAI,YAAC,uBAAG,+BAAyB,qJAClC,UAAC,KAAI,YAAC,uBAAG,6CAAuC,iFACzC,GAGb,CACEH,SAAU,qCACVC,QAAS,UACTC,aAAc,kBACZ,UAACC,EAAM,YACL,UAAC,KAAI,WAAC,mBAAe,SAACC,EAAI,CAACC,KAAK,kCAAkCC,OAAQ,SAAS,SAAC,cAAgB,gLACpG,UAAC,KAAI,WAAC,8HAA0H,SAACF,EAAI,CAACC,KAAK,kCAAmCC,OAAQ,SAAS,SAAC,cAAiB,MAAC,SAACF,EAAI,CAACC,KAAK,iGAAiGC,OAAQ,SAAS,SAAC,sBAAyB,sBAAiB,SAACF,EAAI,CAACC,KAAK,mEAAmEC,OAAQ,SAAS,SAAC,YAAc,OAAG,SAACF,EAAI,CAACC,KAAK,qEAAqEC,OAAQ,SAAS,SAAC,QAAU,4EACvlB,UAAC,KAAI,WAAC,iIAA6H,SAACF,EAAI,CAACC,KAAK,0CAA0CC,OAAQ,SAAS,SAAC,YAAc,2CACjN,GAGb,CACEN,SAAU,+CACVC,QAAS,UACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,uOACN,SAAC,KAAI,UAAC,mJACN,SAAC,KAAI,UAAC,uYACC,GAGb,CACEH,SAAU,8FACVC,QAAS,UACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,2OAEC,GAGb,CACEH,SAAU,sDACVC,QAAS,UACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,WAAC,SAACI,EAAK,CAACC,IAAKC,EAAUC,IAAI,QAChC,SAAC,KAAI,UAAC,6IACC,IAITC,EAAS,CACb,CACEX,SAAU,sDACVC,QAAS,SACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,8RACN,UAAC,KAAI,WAAC,qBAAiB,SAACC,EAAI,CAACC,KAAK,4EAA4EC,OAAQ,SAAS,SAAC,+CAAiD,OAAG,SAACF,EAAI,CAACC,KAAK,4EAA4EC,OAAQ,SAAS,SAAC,iDAC7R,UAAC,KAAI,WAAC,2CAAuC,SAACF,EAAI,CAACC,KAAK,4EAA4EC,OAAQ,SAAS,SAAC,2EAA6E,uDAC5N,GAGb,CACEN,SAAU,2CACVC,QAAS,SACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,+MACN,SAAC,KAAI,UAAC,sKACN,UAAC,KAAI,WAAC,8HACoH,SAACC,EAAI,CAACC,KAAK,kCAAkCC,OAAQ,SAAS,SAAC,cAAiB,MAAC,SAACF,EAAI,CAACC,KAAK,iGAAiGC,OAAQ,SAAS,SAAC,sBAAyB,sBAAiB,SAACF,EAAI,CAACC,KAAK,mEAAmEC,OAAQ,SAAS,SAAC,YAAc,OAAG,SAACF,EAAI,CAACC,KAAK,qEAAqEC,OAAQ,SAAS,SAAC,QAAU,6EAEzkB,GAGb,CACEN,SAAU,gDACVC,QAAS,SACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,+QACC,GAGb,CACEH,SAAU,6CACVC,QAAS,SACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,+GAA2G,SAACC,EAAI,CAACC,KAAK,8EAA8EC,OAAQ,SAAS,SAAC,0BAA4B,yBAEjP,GAGb,CACEN,SAAU,mGACVC,QAAS,SACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,+LACN,SAAC,KAAI,UAAC,waAGC,GAGb,CACEH,SAAU,0CACVC,QAAS,SACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,mMAEC,GAGb,CACEH,SAAU,2CACVC,QAAS,SACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,gMAEC,IAKTS,EAAO,CACX,CACEZ,SAAU,qCACVC,QAAS,OACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,iGAA6F,SAACC,EAAI,CAACC,KAAK,+DAA+DC,OAAQ,SAAS,SAAC,2BAExL,GAGb,CACEN,SAAU,wCACVC,QAAS,OACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,qIAEC,GAGb,CACEH,SAAU,mCACVC,QAAS,OACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,+HAEC,GAGb,CACEH,SAAU,qCACVC,QAAS,OACTC,aAAc,kBACZ,SAACC,EAAM,WACL,SAAC,KAAI,UAAC,8IAEC,IAKTU,EAAkB,CACtB,CACEb,SAAU,mDACVC,QAAS,kBACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,4NAEN,UAAC,KAAI,WAAC,QAAI,SAACC,EAAI,CAACC,KAAK,mFAAmFC,OAAQ,SAAS,SAAC,gBAAkB,2GAC5I,UAAC,EAAAQ,GAAE,YACD,UAAC,EAAAC,GAAE,WAAC,cAAU,uBAAG,WAAU,uHAC3B,SAAC,EAAAA,GAAE,UAAC,6CACJ,SAAC,EAAAA,GAAE,UAAC,gDACJ,UAAC,EAAAA,GAAE,WAAC,cAAU,uBAAG,cAAa,oIAEhC,UAAC,KAAI,WAAC,yDAAqD,SAACX,EAAI,CAACC,KAAK,+FAA+FC,OAAQ,SAAS,SAAC,oBAAuB,MAAC,SAACF,EAAI,CAACC,KAAK,iGAAiGC,OAAQ,SAAS,SAAC,cAAiB,UAAK,SAACF,EAAI,CAACC,KAAK,6GAA6GC,OAAQ,SAAS,SAAC,gCACte,GAGb,CACEN,SAAU,0DACVC,QAAS,kBACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,eAAW,SAACC,EAAI,CAACC,KAAK,sCAAsCC,OAAQ,SAAS,SAAC,iBAAmB,sGAEhG,GAGb,CACEN,SAAU,qDACVC,QAAS,kBACTC,aAAc,kBACZ,UAACC,EAAM,YACL,UAAC,KAAI,WAAC,4BAAwB,SAACC,EAAI,CAACC,KAAK,uIAAwIC,OAAQ,SAAS,SAAC,SAAY,cAACF,EAAI,CAACC,KAAK,yEAA0EC,OAAQ,SAAS,SAAC,eAEtT,UAAC,KAAI,WAAC,0BAAsB,SAACF,EAAI,CAACC,KAAK,oCAAqCC,OAAQ,SAAS,SAAC,SAAY,cAACF,EAAI,CAACC,KAAK,yEAA0EC,OAAQ,SAAS,SAAC,eAEjN,UAAC,KAAI,YAAC,SAACF,EAAI,CAACC,KAAK,mFAAoFC,OAAQ,SAAS,SAAC,0BAA6B,0FAC7I,GAGb,CACEN,SAAU,oEACVC,QAAS,kBACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,0CAAsC,SAACC,EAAI,CAACC,KAAK,0CAAyC,SAAC,iBAAmB,8DAE7G,IAKTW,EAAa,CACjB,CACEhB,SAAU,4EACVC,QAAS,aACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,kCAA8B,SAACC,EAAI,CAACC,KAAK,0CAA2CC,OAAQ,SAAS,SAAC,YAAc,oFAAgF,SAACF,EAAI,CAACC,KAAK,mCAAoCC,OAAQ,SAAS,SAAC,+BAEpQ,GAGb,CACEN,SAAU,6EACVC,QAAS,aACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,QAAI,SAACC,EAAI,CAACC,KAAK,0CAA2CC,OAAQ,SAAS,SAAC,iBAAmB,kJAE9F,GAGb,CACEN,SAAU,+CACVC,QAAS,aACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,mCAA+B,SAACC,EAAI,CAACC,KAAK,0CAAyC,SAAC,iBAAmB,+EAEtG,IAKTY,EAAQ,CACZ,CACEjB,SAAU,0CACVC,QAAS,QACTC,aAAc,kBACZ,UAACC,EAAM,YACL,SAAC,KAAI,UAAC,+TAEN,SAAC,KAAI,UAAC,2MAGN,UAAC,KAAI,WAAC,gCAAkB,SAACC,EAAI,CAACC,KAAK,0CAA2CC,OAAQ,SAAS,SAAC,uBACzF,GAGb,CACEN,SAAU,8BACVC,QAAS,QACTC,aAAc,kBACZ,SAACC,EAAM,WACL,UAAC,KAAI,WAAC,yCAAqC,SAACC,EAAI,CAACC,KAAK,0FAA0FC,OAAQ,SAAS,SAAC,YAAc,wBAAoB,SAACF,EAAI,CAACC,KAAK,qDAAqDC,OAAQ,SAAS,SAAC,0BAE/Q,IA+Gf,IAAMY,GAAoBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAqB,sgBACpCE,EAAAA,GAAAA,QA0CLC,EAAaH,EAAAA,GAAAA,KAAW,+GAKnBE,EAAAA,GAAAA,QAMLE,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAc,qMAKf,SAAAM,GAAK,OAAIA,EAAMC,OAAS,UAAY,MAAM,IAG7C,SAAAD,GAAK,OAAIA,EAAMC,OAAS,kBAAoB,MAAM,IAQzDvB,GAASgB,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAa,2GAOtBS,GAAUT,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAa,y9BAYvBI,EAIEM,EAAAA,GAQEA,EAAAA,GAMJ1B,EAUE0B,EAAAA,IASFzB,GAAOe,EAAAA,EAAAA,IAAOW,EAAAA,EAAPX,CAAS,4FAehBZ,IATQY,EAAAA,EAAAA,IAAOJ,EAAAA,GAAPI,CAAU,yCAIPA,EAAAA,GAAAA,KAAW,yEAKdA,EAAAA,GAAAA,IAAU,0CAIlBY,EAAQZ,EAAAA,GAAAA,IAAU,4JAWxB,EArQA,WAEE,MAAsCa,EAAAA,SAAe,IAAG,eAAjDC,EAAW,KAAEC,EAAc,KAClC,EAAmCF,EAAAA,WAAgB,eAA5CG,EAAM,KAAEC,EAAgB,KAwBzBC,EAAQ,SAAH,GAAgB,IAAXC,EAAI,EAAJA,KACd,OACA,SAAC,KAAK,CAACC,cAAc,SAAQ,SAEX,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,KAAI,WAAoCC,GAAK,IAAvCzC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACzC,UAAC0B,EAAO,CAAac,eAAe,aAAY,WAC9C,UAACnB,EAAQ,CACPoB,QAAS,YA7BN,SAACC,EAAI3C,GAC5BmC,EAAiBnC,GACdkC,IAAWlC,EAEZiC,GAAe,SAACW,GAChB,OAAO,kBACFA,GAAU,cACZD,GAAMC,EAAWD,IAEtB,KAIAV,EAAe,IACfA,GAAe,SAACW,GACV,OAAO,UACJD,GAAMC,EAAWD,GAEtB,IAEN,CASsCE,CAAiBL,EAAMxC,EAAS,EAChD8C,MAAM,UACNrB,OAAQO,EAAYQ,IAAUN,IAAWlC,EAAS,WAElD,SAAC,KAAI,UACFD,KAEH,SAAC,MAAe,CAACgD,KAAM,GAAIC,MAAO,YAGnChB,EAAYQ,IAAUN,IAAWlC,GAChCC,MAbUuC,EAeJ,KAI3B,EAGD,OACE,SAACS,EAAA,EAAW,CACVC,SAAUC,EAAAA,EAAAA,KAAAA,SACVC,UAAWD,EAAAA,EAAAA,KAAAA,UAAwB,UAEnC,UAAC9B,EAAU,YACT,SAACJ,EAAiB,CAACoC,MAAM,SAASC,QAAQ,oBAAoB,WAAS,OAAM,UAC3E,SAAC,KAAO,CAACC,UAAU,aAAaC,KAAK,IAAG,UACtC,UAAC,KAAK,CAAClB,cAAc,SAASG,eAAe,aAAY,WACvD,SAAC,KAAU,UAAC,gCACZ,SAAC,KAAI,CAACgB,OAAO,aAAaV,KAAK,SAAQ,SAAC,mDAExC,SAAC,KAAK,CAACW,MAAM,aAAaD,OAAO,IAAG,UAClC,SAAC,EAAAE,GAAE,CAACC,SAAS,QAAO,SAAC,qFAQ7B,SAAC3C,EAAiB,CAACoC,MAAM,SAASC,QAAQ,mBAAmB,WAAS,QAAO,UAC3E,UAAC,KAAO,CAACC,UAAU,aAAY,WAG7B,SAACzB,EAAK,UAAC,aACP,SAACM,EAAK,CAACC,KAAMvC,KAEb,SAACgC,EAAK,UAAC,wBACP,SAACM,EAAK,CAACC,KAAM3B,KAEb,SAACoB,EAAK,UAAC,eACP,SAACM,EAAK,CAACC,KAAM1B,KAEb,SAACmB,EAAK,UAAC,sBACP,SAACM,EAAK,CAACC,KAAMzB,KAEb,SAACkB,EAAK,UAAC,qBACP,SAACM,EAAK,CAACC,KAAMtB,KAEb,SAACe,EAAK,UAAC,iBACP,SAACM,EAAK,CAACC,KAAMrB,aAQzB,C","sources":["pages/FAQ.tsx"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\n/* eslint-disable */\n\nimport React from 'react';\n\nimport styled from 'styled-components';\nimport { BsChevronExpand } from 'react-icons/bs';\n\nimport { device } from '../config/globals';\nimport PageMeta from '../config/pageMeta';\n\nimport PageWrapper from '../components/PageWrapper';\nimport HybridSection from '../components/HybridSection';\n\nimport { Section, Content, ItemH, ItemV, H1, H2, H3, Para, UL, OL, LI, A, B, Span, HeroHeader, Button } from '../components/SharedStyling';\nimport ImageFAQ from \"../assets/faq-projects.webp\"\n\n// define the question and answers seperately in order to seperate data and render logic\nconst General = [\n  {\n    question: 'What is Push?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push is the world’s first blockchain-agnostic decentralised communication protocol for Web3. It is an open network for validating and indexing all sorts of communication (notifications, chats, etc) that can then be integrated by any crypto frontend (dApps, wallets, etc).</Span>\n        <Span>Any smart contract, dApp, or backend service can integrate Push to provide a communication layer through notifications or chats that are tied to the wallet addresses of users.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'What is Push trying to solve?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push is building the communication layer for Web3, using which any dApp, smart contracts or backend can send any real time communications (such as notifications, chats, video and more) that are tied directly to a user's wallet address (aka web3 usernames).</Span>\n        <Span>This addresses a major gap in the web3 infrastructure, and improving the everyday experience for blockchain users. The notifications (or any other communications) are off-chain, gasless for all scenarios except when a smart contract sends them (in which case the smart contract pays a slightly higher gas fees for the payload that is sent on blockchain).</Span>\n        <Span>While communications are encrypted and secure, they utilize Push open network which means any dApp or crypto wallet can easily integrate them making the lives of all web3 users a lot easier and more akin to web2 UX where apps (or protocols) communicate with their users whenever something of importance occurs or is about to occur for them.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'What are the web3 communication products launched by Push?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span><b>⚬ Push Notifications:</b> Enables any smart contract, dApp, backend to deliver critical informations as notifications to web3 users directly to their wallet addresses.</Span>\n        <Span><b>⚬ Push Chat(wallet-to-wallet chat):</b> Enabling 2-way communication for web3 users from their wallet addresses.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How can I use Push as an end-user?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Connect to the <AMod href=\"https://app.push.org/#/channels\" target={\"_blank\"}>Push dApp</AMod> & opt-in to channels to get notifications for protocols that are relevant to you. Channels are protocols that activate themselves on Push protocol to send notification.</Span>\n        <Span>You can receive notifications from any crypto frontends that have already integrated Push. Alternatively, you can use via <AMod href=\"https://app.push.org/#/channels\"  target={\"_blank\"}>Push dApp</AMod>, <AMod href=\"https://chrome.google.com/webstore/detail/push-protocol-alpha/lbdcbpaldalgiieffakjhiccoeebchmg\" target={\"_blank\"}>browser extension</AMod>, and mobile app (<AMod href=\"https://play.google.com/store/apps/details?id=io.epns.epns&pli=1\" target={\"_blank\"}>Android</AMod> & <AMod href=\"https://apps.apple.com/app/ethereum-push-service-epns/id1528614910\" target={\"_blank\"}>iOS</AMod>) in case your favorite wallet or dApp doesn't have Push support yet.</Span>\n        <Span>Push recently launched a wallet-to-wallet communication product called Push Chat which is in alpha stage. Reach out to us on <AMod href=\"https://discord.com/invite/pushprotocol\" target={\"_blank\"}>Discord</AMod> to get exclusive Push Chat access.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Is Push a blockchain? Is Push decentralised?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push behaves similar to blockchain but is an open network. This means that data is validated and indexed but doesn't have to aligned into blocks as the proof of data validity is supplied with the communication payload itself.</Span>\n        <Span>Push operates on network of nodes called Push Nodes which are responsible for the validation, storage, and delivery of notifications & chats.</Span>\n        <Span>Major efforts are put into decentralising Push Nodes which is in the final stages now. Any content or payloads getting delivered are already immutable and can't be changed as they are secured using crypto-graphical proofs. The other part which ensures that the content can't be censored is in final stages now of testing and public alpha push nodes are expected to be rolled out soon.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'On which blockchain is Push deployed? Can I send notifications from non-EVM chains as well?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push is currently live on Ethereum, Polygon and BNB chain with other major EVM chains and non-EVM / non-Ethereum chains to be supported soon. Push Notifications via gasless sdk and Push Chat sdk supports all EVM chains as of now.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How many projects have integrated with Push so far?',\n    section: 'General',\n    renderAnswer: () => (\n      <Answer>\n        <Span><Image src={ImageFAQ} alt=\"\" /></Span>\n        <Span>More than 400 projects have integrated with Push which includes our 150+ partners including Lens, Polygon, Gitcoin, Decentraland, etc.</Span>\n      </Answer>\n    )\n  }\n] \nconst Notifs = [\n  {\n    question: 'Can I integrate notifications on Frontend / Wallet?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Yes, Push Protocol is an open yet secure network, and behaves similar to a blockchain network but for all things communication. This means that any frontend and / or wallet can integrate notifications or chat on their side and start making the web3 UX and re-engagement a reality.</Span>\n        <Span>Learn more about <AMod href=\"https://docs.push.org/developers/developer-guides/integrating-on-frontend\" target={\"_blank\"}>integrating Push Notification in your dApp</AMod> / <AMod href=\"https://docs.push.org/developers/developer-guides/receiving-notifications\" target={\"_blank\"}>Push Notification in your crypto wallet.</AMod></Span>\n        <Span>Additionally, wallets should check out <AMod href=\"https://docs.push.org/developers/developer-guides/integrating-on-frontend\" target={\"_blank\"}>fee pool of Push which re-imagines and incentivises their contribution</AMod> acknowledging them as an entry point for web3.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How can I start receiving notifications?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>To enable an xyz protocol to send a notification, they need your consent before they can do so which is called opt-in which is gasless. They are also fondly called channels in Push protocol terminology</Span>\n        <Span>Once you opt-in to any channel that you want to get notifications from, your job is done, the channels will send notifications based on their own logic to you. </Span>\n        <Span>\n        You can receive notifications from any crypto frontends that have already integrated Push. Alternatively, you can use via <AMod href=\"https://app.push.org/#/channels\" target={\"_blank\"}>Push dApp</AMod>, <AMod href=\"https://chrome.google.com/webstore/detail/push-protocol-alpha/lbdcbpaldalgiieffakjhiccoeebchmg\" target={\"_blank\"}>browser extension</AMod>, and mobile app (<AMod href=\"https://play.google.com/store/apps/details?id=io.epns.epns&pli=1\" target={\"_blank\"}>Android</AMod> & <AMod href=\"https://apps.apple.com/app/ethereum-push-service-epns/id1528614910\" target={\"_blank\"}>iOS</AMod>) in case your favorite wallet or dApp doesn't have Push support yet.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Do I need a channel to receive notifications?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>No, a channel is only required if you want to send a notification. In order to receive notifications, you just need to connect your wallet to the dapp/mobile app/browser extension and Opt-in to the already existing channels that you want to get notifications from. </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Do I need a channel to send notifications?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Yes, any protocol that wants to send notifications will need to activate themselves on Push protocol, read <AMod href='https://docs.push.org/developers/developer-guides/create-your-notif-channel' target={\"_blank\"}>How to create channel</AMod> for more details. \n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Does Push only handle on-chain notifications? Does Push only handles events based notifications?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>No, Push is extremely versatile and can handle on-chain (coming from smart contracts) or off-chain (coming from backend) notifications apart from notifications generated via sub-graphs.</Span>\n        <Span>\n        The logic of notification depends on what the xyz protocol wants to send to you which already ranges from a variety of use cases such as near loan liquidations, NFT rebids, on-chain or off chain governance, web3 news, airdrop alerts and so much more. If you imaging a use case that your users will benefit from, chances are Push will be able to enable dispatching those notifications to your users (wallet addresses).\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Do I have to pay to send notifications?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>No, Push doesn’t take any fees for you to send notification. Although, there is a nominal charge of 50 PUSH required during Channel creation, which is put in place to prevent spamming.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'What are some use case of notifications?',\n    section: 'Notifs',\n    renderAnswer: () => (\n      <Answer>\n        <Span>The most popular ones are Governance, Loan Pool & Staking and Marketing related notifications though we have many other interesting use cases depending upon the protocols on the channel.\n        </Span>\n      </Answer>\n    )\n  },\n]\n\nconst Chat = [\n  {\n    question: 'Is Push Chat end-to-end encrypted?',\n    section: 'Chat',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Yes, Push Chat is end-to-end encrypted. The encryption is based on PGP Keys. Read more about <AMod href='https://docs.push.org/developers/concepts/push-chat-for-web3' target={\"_blank\"}>how it works here.</AMod>\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How are messages stored in Push Chat?',\n    section: 'Chat',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Messages are all stored on IPFS in an encrypted manner. So only the wallets that are part of the chat can decrypt the messages.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Will Push charge messaging fees?',\n    section: 'Chat',\n    renderAnswer: () => (\n      <Answer>\n        <Span>For now Push is not charging any fees for you to message anyone. There are plans to introduce a freemium model in future.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Does Push Chat have notifications?',\n    section: 'Chat',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Yes. Push Chat has notifications built-in. So there is no need to create a channel or do any extra step to send Push Chat notifications.\n        </Span>\n      </Answer>\n    )\n  },\n]\n\nconst IntegratingPush = [\n  {\n    question: 'How can I integrate Push as a service/developer?',\n    section: 'IntegratingPush',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push can be used as a utility for communication. A service/developer can integrate Push to communicate critical information to its users and to improve the user experience through notifications and chat (Push Chat)\n        </Span>\n        <Span>The <AMod href='https://docs.push.org/developers/developer-tooling/push-sdk/sdk-packages-details' target={\"_blank\"}>Push JS SDK</AMod> is a major component that makes the integration seamless. A few integration ideas using SDK include</Span>\n        <UL>\n          <LI>integrate <b>Opt-in</b> feature on your frontend so users wouldn't have to leave your website to enable notifications from your Channel</LI>\n          <LI>show the notifications on your frontend</LI>\n          <LI>send critical information as notifications</LI>\n          <LI>integrate <b>Push Chat</b> on your frontend and enable 2-way communication between your users or use chat as a way to provide support to your users.</LI>\n        </UL>\n        <Span>Other ways of integrating Push notifications are via <AMod href='https://docs.push.org/developers/developer-guides/sending-notifications/using-smart-contract' target={\"_blank\"}>smart contracts</AMod>, <AMod href='https://docs.push.org/developers/developer-guides/sending-notifications/using-subgraph-gasless' target={\"_blank\"}>subgraphs</AMod>, and <AMod href='https://docs.push.org/developers/developer-guides/sending-notifications/using-showrunners-scaffold-gasless' target={\"_blank\"}>showrunners framework.</AMod></Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How can I test Push integration during the development?',\n    section: 'IntegratingPush',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push has a <AMod href='https://staging.push.org/#/channels' target={\"_blank\"}>Staging dApp</AMod> for developers that points to Ethereum Goerli testnet, Polygon Mumbai testnet and BNB testnet.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'Where can I find the code samples for integration?',\n    section: 'IntegratingPush',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push Chat integration - <AMod href='https://docs.push.org/developers/developer-tooling/push-sdk/sdk-packages-details/epnsproject-sdk-uiweb/uiweb-0.2.3-push-support-chat'  target={\"_blank\"}>Docs</AMod>,<AMod href='https://github.com/ethereum-push-notification-service/push-sdk-sandbox'  target={\"_blank\"}>Github</AMod>\n        </Span>\n        <Span>Push Notifications  - <AMod href='https://docs.push.org/developers/'  target={\"_blank\"}>Docs</AMod>,<AMod href='https://github.com/ethereum-push-notification-service/push-for-hackers'  target={\"_blank\"}>Github</AMod>\n        </Span>\n        <Span><AMod href='https://github.com/ethereum-push-notification-service/push-showrunners-framework'  target={\"_blank\"}>Showrunners Framework</AMod>, a scaffold solution to integrate Push Notification can also used to get started.</Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How I can be assisted in case of any blockers during integration?',\n    section: 'IntegratingPush',\n    renderAnswer: () => (\n      <Answer>\n        <Span>You can just drop your queries on the <AMod href='https://discord.com/invite/pushprotocol'>Push Discord</AMod> and the community managers will be able to assist you.\n        </Span>\n      </Answer>\n    )\n  },\n]\n\nconst Governance = [\n  {\n    question: 'I want to apply for a grant to build on Push Protocol, how can I do this?',\n    section: 'Governance',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Reach out to the Push team on <AMod href='https://discord.com/invite/pushprotocol'  target={\"_blank\"}>Discord</AMod> or schedule a pitch in the office hours or directly dropping a proposal on the <AMod href='https://gov.push.org/c/grants/10'  target={\"_blank\"}>Push Governance Forum.</AMod>\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'If I have queries about grants where’s the best place to direct them?',\n    section: 'Governance',\n    renderAnswer: () => (\n      <Answer>\n        <Span>The <AMod href='https://discord.com/invite/pushprotocol'  target={\"_blank\"}>Push Discord</AMod> is really active when it comes to Push DAO related conversations, try redirecting your queries there and we will be there to help you out.\n        </Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'How can I attend PushDAO Calls and Meetings?',\n    section: 'Governance',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Office Hours are hosted on the <AMod href='https://discord.com/invite/pushprotocol'>Push Discord</AMod> for DAO related meetings, try joining the discord for more information.\n        </Span>\n      </Answer>\n    )\n  },\n]\n\nconst Token = [\n  {\n    question: 'What’s the utility of $PUSH token?',\n    section: 'Token',\n    renderAnswer: () => (\n      <Answer>\n        <Span>Push Protocol aims to achieve a circular economy for its protocol by engendering a communication layer that is run by the community and for the community. The goal is for every participant to be rewarded for their participation while simultaneously discouraging behaviour that would be detrimental to the network.\n        </Span>\n        <Span>\n        $PUSH is the native token of Push Protocol. It achieves the circular economy today through four major use cases: securing the network, network utility, Push DAO and governance, and reward pool fee.\n        </Span>\n        <Span>Read in detail 👉 <AMod href='https://docs.push.org/hub/pusheconomics'  target={\"_blank\"}>Pusheconomics</AMod></Span>\n      </Answer>\n    )\n  },\n  {\n    question: 'From where can I get $PUSH?',\n    section: 'Token',\n    renderAnswer: () => (\n      <Answer>\n        <Span>You can swap any token to $PUSH from <AMod href='https://app.uniswap.org/#/swap?inputCurrency=0xf418588522d5dd018b425e472991e52ebbeeeeee' target={\"_blank\"}>Uniswap</AMod> or from any of the <AMod href='https://coinmarketcap.com/currencies/epns/markets/' target={\"_blank\"}>listed exchanges.</AMod>\n        </Span>\n      </Answer>\n    )\n  },\n];\n\n\nfunction FAQ() {\n\n  const [showAnswers, setShowAnswers] = React.useState([]);\n  const [active, setActiveSection] = React.useState();\n\n  const toggleShowAnswer = (id, section) => {\n    setActiveSection(section);\n    if(active === section){\n    \n      setShowAnswers((oldAnswers) => {\n      return {\n        ...oldAnswers,\n        [id]: !oldAnswers[id]\n      };\n    });\n\n  }\n  else{\n    setShowAnswers([]);\n    setShowAnswers((oldAnswers) => {\n          return {\n            [id]: !oldAnswers[id]\n          };\n        });\n  }\n  };\n\n  const Items = ({body}) => {\n    return(\n    <ItemH flexDirection=\"column\">\n                {\n                  body?.map(({question, section ,renderAnswer}, index) => (\n                    <QnAItem key={index} justifyContent=\"flex-start\">\n                      <Question\n                        onClick={() => {toggleShowAnswer(index,section);}}\n                        hover=\"#e20880\"\n                        isOpen={showAnswers[index] && active === section }\n                      >\n                        <Span>\n                          {question}\n                        </Span>\n                        <BsChevronExpand size={20} color={'#ddd'}/>\n                      </Question>\n  \n                      {showAnswers[index] && active === section &&\n                        renderAnswer()\n                      }\n                    </QnAItem>\n                  ))\n                }\n    </ItemH>\n  )};\n  \n\n  return (\n    <PageWrapper\n      pageName={PageMeta.FAQS.pageName}\n      pageTitle={PageMeta.FAQS.pageTitle}\n    >\n      <FAQWrapper>\n        <ResponsiveSection curve=\"bottom\" padding=\"80px 0px 20px 0px\" data-bkg=\"dark\">\n          <Content className=\"contentBox\" flex=\"0\">\n            <ItemH flexDirection=\"column\" justifyContent=\"flex-start\">\n              <HeroHeader>FREQUENTLY ASKED QUESTIONS</HeroHeader>\n              <Para margin=\"20px 0 0 0\" size=\"1.5rem\">Frequently asked Questions and their answers!</Para>\n\n              <ItemV align=\"flex-start\" margin=\"0\">\n                <H3 maxWidth=\"400px\">GET ANSWERS FOR SOME OF THE POPULAR QUESTIONS ASKED BY PUSH COMMUNITY!</H3>\n              </ItemV>\n\n            </ItemH>\n          </Content>\n        </ResponsiveSection>\n\n        \n        <ResponsiveSection curve=\"bottom\" padding=\"80px 0px 0px 0px\" data-bkg=\"light\">\n          <Content className=\"contentBox\">\n            \n            {/* Questions and answers */}\n            <Title>General</Title>\n            <Items body={General} />\n\n            <Title>Push Notifications</Title>\n            <Items body={Notifs} />\n\n            <Title>Push Chat</Title>\n            <Items body={Chat} />\n\n            <Title>Integrating Push</Title>\n            <Items body={IntegratingPush} />\n\n            <Title>Push Governance</Title>\n            <Items body={Governance} />\n\n            <Title>$PUSH Token</Title>\n            <Items body={Token} />\n            \n         \n          </Content>\n        </ResponsiveSection>\n      </FAQWrapper>\n    </PageWrapper>\n  );\n}\n\nconst ResponsiveSection = styled(HybridSection)`\n  @media ${device.tablet} {\n    padding-left: 30px !important;\n    padding-right: 30px !important;\n  }\n\n  &[data-bkg=\"dark\"] {\n    & h1 {\n        color: #FFF;\n    }\n\n    & h3 {\n        color: #FFF;\n    }\n\n    & span {\n        color: #FFF;\n    }\n\n    & p {\n        color: #FFF;\n    }\n}\n\n&[data-bkg=\"light\"] {\n    & h1 {\n        color: #000;\n    }\n\n    & h3 {\n        color: #000;\n    }\n\n    & span {\n        color: #000;\n    }\n\n    & p {\n        color: #000;\n    }\n  }\n`;\n\nconst FAQWrapper = styled.main`\n  & .contentBox {\n    // row-gap: 18px;\n  }\n\n  @media ${device.tablet} {\n    width: 100%;\n  }\n`;\n\n// css style\nconst Question = styled(Button)`\n  align-items: center;\n  align-self: stretch;\n  width: 100%;\n\n  background: ${props => props.isOpen ? '#e20880' : '#fff'};\n\n  & span {\n    color: ${props => props.isOpen ? '#FFF !important' : '#000'}; \n  }\n\n  &: hover {\n    color: #FFF !important;\n  }\n`;\n\nconst Answer = styled(ItemH)`\n  align-items: stretch;\n  align-self: stretch;\n  justify-content: flex-start;\n\n`;\n\nconst QnAItem = styled(ItemH)`\n  align-items: stretch;\n  align-self: stretch;\n  margin: 15px 0px;\n  border: 1px solid #fafafa;\n  border-radius: 10px;\n  box-shadow: 0px 5px 20px -10px rgb(0 0 0 / 0.20);\n  overflow: hidden;\n  color: #fff;\n\n\n\n  & ${Question} {\n    // background: transparent;\n    justify-content: flex-start;\n\n    & ${Span} {\n      font-weight: 400;\n      letter-spacing: 0.2em;\n      margin-left: 10px;\n      flex: 1;\n    }\n\n    &:hover {\n      & ${Span} {\n        color: #fff;\n      }\n    }\n  }\n\n  & ${Answer} {\n    border: 1px solid #e6e6e6;\n    border-top: 1px solid #e6e6e6;\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    padding: 10px 15px;\n    align-items: flex-start;\n    background: rgb(31,23,47);\n    background: linear-gradient(283deg,rgba(31,23,47,1) 0%,rgba(62,9,40,1) 45%,rgba(17,58,72,1) 100%);\n\n    & ${Span} {\n      line-height: 1.5em;\n      margin: 10px;\n      color: #fff;\n      font-size: 1.05em;\n    }\n  }\n`;\n\nconst AMod = styled(A)`\n  color: #fff;\n  font-weight: 400;\n  text-decoration: underline;\n`;\n\nconst LIMod = styled(LI)`\n  color: white;\n`;\n\nconst BoldText = styled.span`\n  font-weight: bold;\n  color: #FFF !important;\n`;\n\nconst Image = styled.img`\n  width: 400px;\n`;\n\nconst Title = styled.div`\n  font-family: 'Strawford';\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 38px;\n  color: #000000;\n  margin-top: 50px;\n`;\n\n\n\nexport default FAQ;"],"names":["General","question","section","renderAnswer","Answer","AMod","href","target","Image","src","ImageFAQ","alt","Notifs","Chat","IntegratingPush","UL","LI","Governance","Token","ResponsiveSection","styled","HybridSection","device","FAQWrapper","Question","Button","props","isOpen","ItemH","QnAItem","Span","A","Title","React","showAnswers","setShowAnswers","active","setActiveSection","Items","body","flexDirection","map","index","justifyContent","onClick","id","oldAnswers","toggleShowAnswer","hover","size","color","PageWrapper","pageName","PageMeta","pageTitle","curve","padding","className","flex","margin","align","H3","maxWidth"],"sourceRoot":""}